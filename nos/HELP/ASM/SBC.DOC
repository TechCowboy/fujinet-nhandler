›|SBC|A-M-C  A |››Subtract Mem from Accum with Borrow›››|8 4 2 1|8 4 2 1|››|N V   B|D I Z C|›|  - -|- -  b|››b: CARRY NOT = BORROW›››| ADDR MODE |  SYNTAX   |OPC|BYT|CYC|››|Immediate  |SBC #$44   |$E9| 2 | 2 |›|Zero Page  |SBC $44    |$E5| 2 | 3 |›|Zero Page,X|SBC $44,X  |$F5| 2 | 4 |›|Absolute   |SBC $4400  |$ED| 3 | 4 |›|Absolute,X |SBC $4400,X|$FD| 3 | 4+|›|Absolute,Y |SBC $4400,Y|$F9| 3 | 4+|›|Indirect,X |SBC ($44,X)|$E1| 2 | 6 |›|Indirect,Y |SBC ($44),Y|$F1| 2 | 5+|››+ 1 cycle if page boundary crossed››SBC subtracts the value found at the›addressed memory and borrow from the›value in the accumulator, and stores›the result in the accumulator. Borrow›is defined as the carry flag›complimented.››The result in the accumulator affects›the Processor Status flags:››` C=1 if A >= 0›` C=0 if A < 0, indicating a borrow.›` Z=1 if A = 0›` Z=0 if A <> 0›` V=1 if result exceeds +127 or -128›` V=0 if above is not true›` N=bit 7 (sign bit) of the result››Example (ATARI ASM/ED):›0100 ;-------------------›0110 ; RESULT = $14 - $05›0120 ;-------------------›0130 MAIN›0140   *=$0600     ;Assemble @ page 6›0150   SEC         ;Always set carry›0160   LDA #$14    ;Let A=$14 (20)›0170   SBC #$05    ;Let A=A-$05-C›0180   STA RESULT  ;Save result›0190   RTS›0200 RESULT .BYTE $00›ASM›BUG to debug, X to exit debugger›S0600 then S to step until RTS›L0600,0608 to list disassembly›D0609,0609 to display RESULT